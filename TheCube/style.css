/* General reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Base styles for the body */
body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    display: flex;
    justify-content: center; /* Center horizontally */
    align-items: center; /* Center vertically */
    min-height: 100vh; /* min height of the viewport */
    min-width: 100vh;
}

.container {
    max-width: 600px;
    margin: 50px;
    padding: 20px;
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

h1 {
    text-align: center;
    margin-bottom: 20px;
}

.instructions {
    border: 2px solid black;
    margin: 1vh;
    padding: 1vh;
}

#trialinput{
    font-size: 0.79rem;
}

.input-section {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

#moveInput {
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 4px;
    width: 90%;
}

#generateRandomMoveButton {
    margin: 0.4vh;
}

button {
    padding: 10px;
    font-size: 16px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

button:hover {
    background-color: #0056b3;
}

.output-section {
    margin-top: 20px;
}

#resultText {
    font-size: 18px;
    text-align: center;
    overflow-x: scroll;
}

.iteration {
    text-align: center;
    font-size: larger;
}

.iteration input[type = number] {
    width: 10vh;
}

.iteration button {
    margin: 1vh;
}

.iteration label {
    margin: 5vh;
}

.iteration #counter {
    margin: 1vh;
}

#moveText {
    font-family: 'Courier New', Courier, monospace;
    font-size: larger;
}

#moveText b {
    color: chartreuse;
    font-size: xx-large;
}

/* Style for the cube */
#cube {
    width: 30vh;
    height: 30vh;
    margin: 10vh 20vh;
    transform-style: preserve-3d;
    transform: rotateX(0deg) rotateY(0deg);
    transition: transform 0.5s;
}

/* Style for each face of the cube */
.face {
    position: absolute;
    width: 100%;
    height: 100%;
    display: grid; /* grid layout for squares */
    grid-template-columns: repeat(3, 1fr); /* 3x3 grid */
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.5); /* Soft shadow for depth */
}

/* position of each face */
#U { transform: rotateX(90deg) translateZ(calc(15vh)); }
#F { transform: translateZ(calc(15vh)); }
#R { transform: rotateY(90deg) translateZ(calc(15vh)); }
#B { transform: rotateY(180deg) translateZ(calc(15vh)); }
#L { transform: rotateY(-90deg) translateZ(calc(15vh)); }
#D { transform: rotateX(-90deg) translateZ(calc(15vh)); }

/* Flattened Cube: Faces Layout */
.flat #F { transform: translateX(0vh) translateY(0vh); }
.flat #B { transform: translateX(20vh) translateY(0vh); }
.flat #L { transform: translateX(-10vh) translateY(0vh); }
.flat #R { transform: translateX(+10vh) translateY(0vh); }
.flat #U { transform: translateX(0vh) translateY(-10vh); }
.flat #D { transform: translateX(0vh) translateY(+10vh); }

/* Style for each square within the faces */
.square {
    border: 2px solid #ccc;
}

.axis{
    margin: 10px;
}